
;org 256 

; 256

test_loop:
	call	BIOS_scanchar 
	call 	nz,put_one
	jr	test_loop

; test random 

put_one:
	ld	a,64
	call	BIOS_putchar
	ret

; Test progrmm:

       ;ld       de,STR_ver
       ;call     BIOS_printstr

	ld 	hl,STR1
	ld	bc,STR2
	call	BIOS_strcmp
	ld	a,d
	cp 	1 
	jr	z,_prepoznato 
	call 	_ne_prepoznato

_prepoznato:
	
       ld       de,STR_newline
       call     BIOS_printstr

       ld       de,STR_succParse
       call     BIOS_printstr
       halt

_ne_prepoznato:
       ld       de,STR_newline
       call     BIOS_printstr

       ld       de,STR_errorParse
       call     BIOS_printstr
	halt

loop:
       ld       de,STR_newline
       call     BIOS_printstr

       ld       de,STR_prompt
       call     BIOS_printstr

       call     BIOS_getcommand
       
       jr        loop
       
       ;ld         a,2
       ;ld         (2560),a
       
       ;ld         a,41
       ;ld         (2048),a

       ;ld         a,42
       ;ld         (2064),a
       
       ;call BIOS_filesystem_list

       halt
       
        
; Rutina za ocitavanje jednog karaktera. Ceka se da
; otkucani znak bude na raspolaganju pa se vraca
; u registru A.

; scans for character (key press)
BIOS_scanchar:
	in	a,(13h)
	ret

; input (HL), (BC), output Z, compare two characters 
BIOS_charcmp:
	ld	a,(BC) 
	cp	(HL)
	ret

; Compare two strings and put it into D 
BIOS_strcmp:
	ld	d,1
_strcmp_loop:
	ld 	a,(HL)
	cp 	0
	jr	z,_strcmp_check_another
	ld	a,(bc) 
	cp	0
	jr	z,_strcmp_check_another_1
	call	BIOS_charcmp 
	jr 	nz,_strcmp_exit
	inc 	hl
	inc	bc
	jr	_strcmp_loop
_strcmp_exit:
	ld	d,0
	ret
_strcmp_check_another:
	ld 	a,(bc)
	cp 	0
	jr	nz,_strcmp_exit
	ret
_strcmp_check_another_1:
	ld 	a,(hl)
	cp	0
	jr	nz,_strcmp_exit
	ret

; get character 
BIOS_getchar:

_waitgc:
        in   a,(12h)
        bit  1,a
        jr   z,_waitgc
        
        in   a,(13h)
        ret
        
; Rutina za ispisivanje jednog karaktera na terminalu.
; Karakter se srosledjuje kroz registar. Rutina ceka
; terminal da bude spreman za upis.
        
BIOS_putchar:
        push af

_waitpc:
        in   a,(12h)
        bit  2,a
        jr   z,_waitpc

        pop  af
        out  (13h),a
        ret
        
; Rutina za ocitavanja niza karaktera sa tastature
; i smestanje u memoriju. Po pritisku ENTER na kraju
; se upisuje NULL i prekida se citanje

BIOS_getcommand:
                push        af
                push        bc
                push        hl
                
                ld          hl,LINE_BUFFER
                ld          b,64
                
_cmdloop:
                call        BIOS_getchar
                
                ; Proveri da li je pritisnut enter,
                ; pa ako jese, zavrsi sa unosom linije.
                
                cp          13
                jr          z,_exitgc
                
                ; Pravilno izvrsavanje backspace
                
                cp         8
                jr         nz,_gcback
                
                ld         a,b
                cp         64
                jr         z,_cmdloop
                
                ld         a,8
                call       BIOS_putchar
                ld         a,32
                call       BIOS_putchar
                ld         a,8
                call       BIOS_putchar
                inc        b
                dec        hl
                jr         _cmdloop
                
_gcback:

                ; Provera da li je unet maksimalni broj
                ; karaktera, pa ako jeste vrati se na
                ; ocitavanje bez promene brojaca.
                
                ex          af,af'
                ld          a,b
                cp          0
                jr          z,_cmdloop

                ; Ako nije ENTER, upisi karakter u memoriju
                
                ex          af,af'
                ld          (hl),a
                call        BIOS_putchar
                inc         hl
                dec         b
                jr          _cmdloop
                
_exitgc:
                ld          (hl),0
                pop         hl
                pop         bc
                pop         af
                ret

BASIC_parse_line: 
	; routine for parsing commands 
	ld	de,STR_newline
	call 	BIOS_printstr
	ld	de,STR_errorParse 
	call	BIOS_printstr
	ld	de,STR_newline
	call 	BIOS_printstr
	ret 

; Rutina za ispis NULL terminisanog stringa.
; Registar DE se koristi kao pocetna adresa
; stringa koji treba ispisati. Po zavrsetku
; de pokazuje na NULL karakter, a ostali
; registri su nepromenjeni

BIOS_printstr:
         push af
         
_seeknull:
         ld         a,(de)
         cp         0
         jr         z,_exitps
         
         call       BIOS_putchar
         
         inc         de
         jr          _seeknull
         
_exitps:
         pop         af
         ret
         
STR_prompt:
         db "READY>> ",0
         
STR_newline:
         db 13,10,0

STR_succParse:
	db "Successful parsing"

STR_errorParse: 
	db "Error while parsing"

STR_ver:
         db "Petnica BIOS v1.0", 13, 10
         db "Z80 Emu port, FEB/2014", 13, 10, 13, 10, 0

STR1:
	db "aab",0

STR2:
	db "aaa",0

LINE_BUFFER:
            db 128
